// Generated by Bisonc++ V4.01.00 on Wed, 06 Mar 2013 18:50:17 -0800

    // Include this file in the sources of the class Parser.

// $insert class.h
#include "Parser.h"

Parser::Parser(int verboseLevel)
{
    verbosity = verboseLevel;
    
    //use setDebug here....

    d_scanner.setVerbosity(verbosity);
    d_scanner.setParserRef(this);
    d_scanner.setLoc(&d_loc__);
    d_scanner.setSval(&d_val__);
}

void Parser::signalScanErr(char const *msg)
{
    error(msg);
    ABORT();
}

inline void Parser::error(char const *msg)
{
    std::cerr << std::endl;
    std::cerr << "Error at " 
              << d_loc__.first_line << ":" << d_loc__.first_column 
              << " : " << msg << " (see location below)" 
              << std::endl << std::endl;

    std::cerr << std::setw(4) << d_loc__.first_line << " | " << d_scanner.linebuf << std::endl;
    std::cerr << "     | " << std::setfill('-') << std::setw(d_loc__.first_column);
    std::cerr << "^" << std::endl << std::endl;
}

// $insert lex
inline int Parser::lex()
{
    return d_scanner.lex();
}

inline void Parser::print()         
{
    print__();           // displays tokens if --print was specified
}

//inline void Parser::exceptionHandler__(std::exception const &exc)
//{
//    std::cout << exc.what() << '\n';
//    ++d_nErrors__;
//}

    // Add here includes that are only required for the compilation 
    // of Parser's sources.



    // UN-comment the next using-declaration if you want to use
    // int Parser's sources symbols from the namespace std without
    // specifying std::

//using namespace std;
