// Generated by Flexc++ V0.98.00 on Mon, 04 Mar 2013 21:46:01 -0800

// $insert class_h
#include "Scanner.h"

void Scanner::comment()
{
    size_t ch = get__();
    while(ch != -1)
    {
        if(ch == '*')
        {
            ch = get__();
            if(ch =='/')
            {
                printInfo(1, "Comment removed... (multiline)\n");
                columnNr__ = 1;
                return;
            }
        }
        else if(ch == '/')
        {
            ch = get__();
            if(ch == '*')
                comment();
        }

        ch = get__();
    }

    printInfo(0, "Error: the multiline comment was not closed...\n");
}

void Scanner::setLoc(Parser::LTYPE__ *ptr)
{
    lloc = ptr;
}

void Scanner::setSval(Parser::STYPE__ *ptr)
{
    sval = ptr;
}

void Scanner::setVerbosity(int verboseLevel)
{
    verbosity = verboseLevel;

    //The debug switch will need to be flipped here for the scanner
}

void Scanner::setParserRef(Parser* parserRef)
{
    parserPtr = parserRef;
}

void Scanner::printInfo(int level, std::string msg)
{
    if(level <= verbosity)
        std::cout << msg;
}

size_t Scanner::columnNr() const
{
    return columnNr__;
}
